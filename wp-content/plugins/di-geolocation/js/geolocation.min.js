var DIGeoLocation = {
    ignoreRequestCount: 2,
    ignoreRequestCookieDurationInMinutes: 10080,
    ignoreRequestCookieDurationInMinutesWhenDeviceDoesntSupportLocations: 525600,
    ignoreRequestCookieKey: "diGeolocationIgnoreData",
    ignoreRequestData: {
        currentRequestCount: 0,
        createdAt: jQuery.now()
    },
    cookieDurationInMinutes: 15,
    updateDurationInMinutes: 5,
    isConsoleLogEmitting: !1,
    isAjaxEnabled: !1,
    isSupported: !0,
    isClickyIntegrationEnabled: !0,
    isClickyCustomTimerOverridden: !0,
    clickyCustomTimerOverrideValue: 200,
    positionOptions: {
        enableHighAccuracy: !0,
        timeout: 3e4
    },
    cookieKey: "diGeolocationCookie",
    userLocationData: {
        isUserLocationDataAvailable: !1,
        isRejectedByBrowser: !1,
        latitude: !1,
        longitude: !1,
        accuracy: !1,
        altitude: !1,
        altitudeAccuracy: !1,
        heading: !1,
        speed: !1,
        timestamp: !1
    },
    locationPromise: new jQuery.Deferred,
    init: function() {
        DIGeoLocation.showAdminBar("Loc: Init..."), DIGeoLocation.addEvents();
        var o = DIGeoLocation.readCookie(DIGeoLocation.cookieKey),
            e = DIGeoLocation.readCookie(DIGeoLocation.ignoreRequestCookieKey);
        e ? (DIGeoLocation.ignoreRequestData = JSON.parse(e), Math.floor((jQuery.now() - DIGeoLocation.ignoreRequestData.createdAt) / 60 / 1e3) >= DIGeoLocation.ignoreRequestCookieDurationInMinutes && (DIGeoLocation.ignoreRequestData.currentRequestCount = 0, DIGeoLocation.ignoreRequestData.createdAt = jQuery.now(), DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), DIGeoLocation.ignoreRequestCookieDurationInMinutes))) : DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), DIGeoLocation.ignoreRequestCookieDurationInMinutes);
        o ? (DIGeoLocation.userLocationData = JSON.parse(DIGeoLocation.readCookie(DIGeoLocation.cookieKey)), DIGeoLocation.locationPromise.resolve(DIGeoLocation.userLocationData), Math.floor((jQuery.now() - DIGeoLocation.userLocationData.createdAt) / 60 / 1e3) < DIGeoLocation.updateDurationInMinutes ? (DIGeoLocation.console_log("cookie data found and is not yet expired. No further geolocation action is needed."), DIGeoLocation.showAdminBar("Loc: " + DIGeoLocation.userLocationData.latitude.toFixed(5) + "," + DIGeoLocation.userLocationData.longitude.toFixed(5))) : (DIGeoLocation.console_log("Cookie data found but in need of update. Requesting Update..."), 1 != DIGeoLocation.userLocationData.isRejectedByBrowser ? DIGeoLocation.requestGlobalLocationFromBrowser() : DIGeoLocation.showAdminBar("Loc: Rejected"))) : (DIGeoLocation.console_log("DI GeoLocation cookie is not set or is expired. Requesting geolocation data."), DIGeoLocation.exceededRequestCount() ? (DIGeoLocation.showAdminBar("Loc: Ignored"), DIGeoLocation.console_log("Exceeded GeoLocation request count. No longer requesting information from user.")) : DIGeoLocation.requestGlobalLocationFromBrowser());
        DIGeoLocation.locationPromise.done(function(o) {
            jQuery(document).trigger("di_geolocation_finished", {
                status: "OK",
                response: o
            })
        }).fail(function(o) {
            jQuery(document).trigger("di_geolocation_finished", {
                status: o.code.toString(),
                response: "Error: " + o.code
            })
        })
    },
    addEvents: function() {
        jQuery(document).off("di_geolocation_updated").on("di_geolocation_updated", function(o, e) {
            "status" in e && "OK" == e.status && jQuery(document).trigger("di_ev", {
                name: "geolocation",
                label: "Update Location",
                default_score: 0,
                custom_data: {
                    location: e.response
                }
            })
        })
    },
    console_log: function(o) {
        if (void 0 === DIGeoLocation.isConsoleLogEmitting || 0 == DIGeoLocation.isConsoleLogEmitting) return !1;
        "undefined" != typeof console && void 0 !== console.log || (console = {}, console.log = function(o) {
            alert(o)
        }), console.log(o)
    },
    showAdminBar: function(o) {
        jQuery("#wp-admin-bar-di-geolocation_location-available span.geolocation").text(o)
    },
    exceededRequestCount: function() {
        return DIGeoLocation.ignoreRequestData.currentRequestCount >= DIGeoLocation.ignoreRequestCount
    },
    stillLoading: function() {
        return 0 != DIGeoLocation.isSupported && (!DIGeoLocation.exceededRequestCount() && 0 == DIGeoLocation.userLocationData.isRejectedByBrowser && 0 == DIGeoLocation.userLocationData.isUserLocationDataAvailable)
    },
    requestGlobalLocationFromBrowser: function() {
        DIGeoLocation.showAdminBar("Loc: Requesting..."), DIGeoLocation.ignoreRequestData.currentRequestCount += 1, DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), DIGeoLocation.ignoreRequestCookieDurationInMinutes), navigator.geolocation && !window.disableDIGeolocation ? navigator.geolocation.getCurrentPosition(DIGeoLocation.handleLocationSuccessData, DIGeoLocation.handleLocationError, DIGeoLocation.positionOptions) : (DIGeoLocation.isSupported = !1, DIGeoLocation.console_log("Error: Your browser doesn't support geolocation."))
    },
    handleLocationError: function(o) {
        switch (o.code) {
            case 1:
                DIGeoLocation.console_log("GeoLocation failed or denied by browser"), DIGeoLocation.showAdminBar("Loc: Failed"), DIGeoLocation.userLocationData.isRejectedByBrowser = !0, DIGeoLocation.ignoreRequestData.currentRequestCount = DIGeoLocation.ignoreRequestCount, DIGeoLocation.ignoreRequestData.createdAt = jQuery.now(), DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), DIGeoLocation.ignoreRequestCookieDurationInMinutes);
                break;
            case 2:
                DIGeoLocation.console_log("GeoLocation is not supported by the browser"), DIGeoLocation.showAdminBar("Loc: Unsupported"), DIGeoLocation.userLocationData.isRejectedByBrowser = !0, DIGeoLocation.ignoreRequestData.currentRequestCount = DIGeoLocation.ignoreRequestCount, DIGeoLocation.ignoreRequestData.createdAt = jQuery.now(), DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), DIGeoLocation.ignoreRequestCookieDurationInMinutesWhenDeviceDoesntSupportLocations);
                break;
            case 3:
                DIGeoLocation.console_log("DIGeolocation - timeout received when attempting to get geolocation"), DIGeoLocation.showAdminBar("Loc: Timeout"), DIGeoLocation.userLocationData.isRejectedByBrowser = !0, DIGeoLocation.ignoreRequestData.currentRequestCount = DIGeoLocation.ignoreRequestCount, DIGeoLocation.ignoreRequestData.createdAt = jQuery.now(), DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), 180);
                break;
            default:
                DIGeoLocation.showAdminBar("Loc: Error"), DIGeoLocation.console_log("DIGeolocation Other Error requesting location: " + o.code)
        }
        DIGeoLocation.locationPromise.reject(o)
    },
    handleLocationSuccessData: function(o) {
        DIGeoLocation.ignoreRequestData.currentRequestCount = 0, DIGeoLocation.createCookie(DIGeoLocation.ignoreRequestCookieKey, JSON.stringify(DIGeoLocation.ignoreRequestData), DIGeoLocation.ignoreRequestCookieDurationInMinutes), DIGeoLocation.userLocationData = {
            createdAt: jQuery.now(),
            isUserLocationDataAvailable: !0,
            isRejectedByBrowser: !1,
            latitude: o.coords.latitude,
            longitude: o.coords.longitude,
            accuracy: o.coords.accuracy,
            altitude: o.coords.altitude,
            altitudeAccuracy: o.coords.altitudeAccuracy,
            heading: o.coords.heading,
            speed: o.coords.speed,
            timestamp: o.timestamp
        };
        var e = ajax_geolocation_params.ajax_url;
        DIGeoLocation.console_log("setting geolocation cookie for " + DIGeoLocation.cookieDurationInMinutes + " minutes."), DIGeoLocation.createCookie(DIGeoLocation.cookieKey, JSON.stringify(DIGeoLocation.userLocationData), DIGeoLocation.cookieDurationInMinutes), void 0 === DIGeoLocation.isAjaxEnabled || !1 === DIGeoLocation.isAjaxEnabled ? DIGeoLocation.console_log("Geolocation - ajax is disabled. Storing as cookie only.") : (DIGeoLocation.console_log("Geolocation - ajax is enabled. Storing as cookie AND submitting via AJAX."), jQuery.ajax({
            type: "POST",
            url: e,
            dataType: "script",
            data: {
                action: "di_geolocation_filter",
                userLocation: DIGeoLocation.userLocationData,
                window_location_href: window.location.href
            },
            beforeSend: function() {
                console_log(locationData)
            },
            success: function(o) {
                o.callback()
            },
            error: function() {
                $("#CloseEventsRow .events-closest").html("<p>Sorry, unable to retrieve the nearest locations at this time.</p>")
            }
        })), DIGeoLocation.showAdminBar("Loc: " + DIGeoLocation.userLocationData.latitude.toFixed(5) + "," + DIGeoLocation.userLocationData.longitude.toFixed(5)), DIGeoLocation.locationPromise.resolve(DIGeoLocation.userLocationData), jQuery(document).trigger("di_geolocation_updated", {
            status: "OK",
            response: DIGeoLocation.userLocationData
        })
    },
    doClickyIntegration: function(o, e, t) {
        void 0 !== o && !1 !== o && ("undefined" != typeof clicky_custom && !1 !== clicky_custom || (clicky_custom = {}, void 0 === e || !1 === e || (clicky_custom.timer = t)), void 0 !== clicky_custom.visitor && !1 !== clicky_custom.visitor || (clicky_custom.visitor = {}), DIGeoLocation.console_log("Clicky fired!"), DIGeoLocation.console_log(DIGeoLocation), clicky_custom.visitor.di_geo_isUserLocationDataAvailable = DIGeoLocation.userLocationData.isUserLocationDataAvailable, "number" == typeof DIGeoLocation.userLocationData.latitude && (clicky_custom.visitor.di_geo_latitude = DIGeoLocation.userLocationData.latitude.toFixed(5)), "number" == typeof DIGeoLocation.userLocationData.latitude && (clicky_custom.visitor.di_geo_longitude = DIGeoLocation.userLocationData.longitude.toFixed(5)))
    },
    createCookie: function(o, e, t) {
        if (t) {
            var i = new Date;
            i.setTime(i.getTime() + 60 * t * 1e3);
            var n = "; expires=" + i.toGMTString()
        } else n = "";
        document.cookie = o + "=" + e + n + "; path=/"
    },
    readCookie: function(o) {
        for (var e = o + "=", t = document.cookie.split(";"), i = 0; i < t.length; i++) {
            for (var n = t[i];
                " " == n.charAt(0);) n = n.substring(1, n.length);
            if (0 == n.indexOf(e)) return n.substring(e.length, n.length)
        }
        return null
    },
    eraseCookie: function(o) {
        DIGeoLocation.createCookie(o, "", -1)
    },
    reset: function() {
        DIGeoLocation.eraseCookie(DIGeoLocation.ignoreRequestCookieKey), DIGeoLocation.eraseCookie(DIGeoLocation.cookieKey)
    }
};
DIGeoLocation.doClickyIntegration(DIGeoLocation.isClickyIntegrationEnabled, DIGeoLocation.isClickyCustomTimerOverridden, DIGeoLocation.clickyCustomTimerOverrideValue), jQuery(window).load(function() {
    DIGeoLocation.init()
});