! function(t, e) {
    "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? module.exports = e() : t.LazyLoad = e()
}(this, function() {
    var e, o = !1;

    function s(t, e, o) {
        var n, i, l;

        function s() {
            return window.innerWidth || n.documentElement.clientWidth || document.body.clientWidth
        }

        function r(t) {
            return t.getBoundingClientRect().top + i - n.documentElement.clientTop
        }

        function a(t) {
            return t.getBoundingClientRect().left + l - n.documentElement.clientLeft
        }
        return n = t.ownerDocument, i = window.pageYOffset || n.body.scrollTop, l = window.pageXOffset || n.body.scrollLeft, !((e === window ? (window.innerHeight || n.documentElement.clientHeight || document.body.clientHeight) + i : r(e) + e.offsetHeight) <= r(t) - o || (e === window ? i : r(e)) >= r(t) + o + t.offsetHeight || (e === window ? s() + window.pageXOffset : a(e) + s()) <= a(t) - o || (e === window ? l : a(e)) >= a(t) + o + t.offsetWidth)
    }

    function n() {
        return (new Date).getTime()
    }

    function i(t, e, o) {
        var n = t.tagName,
            i = t.getAttribute("data-" + o);
        if ("IMG" === n) {
            ! function(t, e) {
                var o = t.parentElement;
                if ("PICTURE" === o.tagName)
                    for (var n = 0; n < o.children.length; n++) {
                        var i = o.children[n];
                        if ("SOURCE" === i.tagName) {
                            var l = i.getAttribute("data-" + e);
                            l && i.setAttribute("srcset", l)
                        }
                    }
            }(t, e);
            var l = t.getAttribute("data-" + e);
            return l && t.setAttribute("srcset", l), void(i && t.setAttribute("src", i))
        }
        "IFRAME" !== n ? i && (t.style.backgroundImage = "url(" + i + ")") : i && t.setAttribute("src", i)
    }

    function l(t, e) {
        return function() {
            return t.apply(e, arguments)
        }
    }

    function t(t) {
        o || (e = {
            elements_selector: "img",
            container: window,
            threshold: 300,
            throttle: 150,
            data_src: "original",
            data_srcset: "original-set",
            class_loading: "lazyload-loading",
            class_loaded: "loaded",
            skip_invisible: !0,
            callback_load: null,
            callback_error: null,
            callback_set: null,
            callback_processed: null
        }, o = !0), this._settings = function(t, e) {
            var o, n = {};
            for (o in t) t.hasOwnProperty(o) && (n[o] = t[o]);
            for (o in e) e.hasOwnProperty(o) && (n[o] = e[o]);
            return n
        }(e, t), this._queryOriginNode = this._settings.container === window ? document : this._settings.container, this._previousLoopTime = 0, this._loopTimeout = null, this._handleScrollFn = l(this.handleScroll, this), window.addEventListener("resize", this._handleScrollFn), this.update()
    }
    return t.prototype._showOnAppear = function(t) {
        var e = this._settings;

        function o() {
            t.removeEventListener("load", n), t.classList.remove(e.class_loading), e.callback_error && e.callback_error(t)
        }

        function n() {
            null !== e && (e.callback_load && e.callback_load(t), t.classList.remove(e.class_loading), t.classList.add(e.class_loaded), t.removeEventListener("load", n), t.removeEventListener("error", o))
        }
        "IMG" !== t.tagName && "IFRAME" !== t.tagName || (t.addEventListener("load", n), t.addEventListener("error", o), t.classList.add(e.class_loading)), i(t, e.data_srcset, e.data_src), e.callback_set && e.callback_set(t)
    }, t.prototype._loopThroughElements = function() {
        var t, e, o = this._settings,
            n = this._elements,
            i = n ? n.length : 0,
            l = [];
        for (t = 0; t < i; t++) e = n[t], o.skip_invisible && null === e.offsetParent || s(e, o.container, o.threshold) && (this._showOnAppear(e), l.push(t), e.wasProcessed = !0);
        for (; 0 < l.length;) n.splice(l.pop(), 1), o.callback_processed && o.callback_processed(n.length);
        0 === i && this._stopScrollHandler()
    }, t.prototype._purgeElements = function() {
        var t, e = this._elements,
            o = e.length,
            n = [];
        for (t = 0; t < o; t++) e[t].wasProcessed && n.push(t);
        for (; 0 < n.length;) e.splice(n.pop(), 1)
    }, t.prototype._startScrollHandler = function() {
        this._isHandlingScroll || (this._isHandlingScroll = !0, this._settings.container.addEventListener("scroll", this._handleScrollFn))
    }, t.prototype._stopScrollHandler = function() {
        this._isHandlingScroll && (this._isHandlingScroll = !1, this._settings.container.removeEventListener("scroll", this._handleScrollFn))
    }, t.prototype.handleScroll = function() {
        var t, e, o;
        this._settings && (e = n(), 0 !== (o = this._settings.throttle) ? (t = o - (e - this._previousLoopTime)) <= 0 || o < t ? (this._loopTimeout && (clearTimeout(this._loopTimeout), this._loopTimeout = null), this._previousLoopTime = e, this._loopThroughElements()) : this._loopTimeout || (this._loopTimeout = setTimeout(l(function() {
            this._previousLoopTime = n(), this._loopTimeout = null, this._loopThroughElements()
        }, this), t)) : this._loopThroughElements())
    }, t.prototype.update = function() {
        var t;
        this._elements = (t = this._queryOriginNode.querySelectorAll(this._settings.elements_selector), Array.prototype.slice.call(t)), this._purgeElements(), this._loopThroughElements(), this._startScrollHandler()
    }, t.prototype.destroy = function() {
        window.removeEventListener("resize", this._handleScrollFn), this._loopTimeout && (clearTimeout(this._loopTimeout), this._loopTimeout = null), this._stopScrollHandler(), this._elements = null, this._queryOriginNode = null, this._settings = null
    }, t
});
//# sourceMappingURL=../sourcemaps/lazyload.min.js.map