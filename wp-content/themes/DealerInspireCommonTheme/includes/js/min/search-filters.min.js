var di_get_homepage_acf_redirect_url = function(i) {
        if ("undefined" == typeof di_homepage_acf_redirects || 0 === di_homepage_acf_redirects.length) return !1;
        var r = !1,
            e = jQuery.grep(di_homepage_acf_redirects, function(e) {
                if (!e.terms || !e.redirect_url) return !1;
                if (-1 < jQuery.inArray(i.toLowerCase(), e.terms)) return !0;
                var r = !1;
                return jQuery.each(e.terms, function(e, t) {
                    if (2 === (t.match(/%/g) || []).length && -1 < i.toLowerCase().indexOf(t.replace(/%/g, ""))) return !(r = !0)
                }), r
            });
        return jQuery.each(e, function(e, t) {
            if (t.redirect_url) return r = t.redirect_url, !1
        }), r
    },
    di_get_search_redirect_url = function(e) {
        var t = "#action=im_ajax_call&perform=get_results&page=1",
            r = "";
        try {
            if (!(-1 < di_search_settings.dealer_makes.indexOf("Honda") || -1 < di_search_settings.dealer_makes.indexOf("Acura")) || "" !== di_search_settings.new_on_used && "" !== di_search_settings.used_on_new || (di_search_settings.used_vehicles_url = di_search_settings.new_vehicles_url), "" === di_search_settings.new_vehicles_url && "" === di_search_settings.used_vehicles_url) throw "Please set New and Used pages in Site Configurations.";
            if (e && "string" == typeof e && -1 < e.indexOf(",") && (e = e.split(",")), e && "object" == typeof e) 1 === jQuery.map(e, function(e, t) {
                return t
            }).length ? r = di_get_search_redirect_url(e[0]) : (r = di_search_settings.used_vehicles_url + t, jQuery.each(e, function(e, t) {
                r += "&type%5B%5D=" + encodeURIComponent(t)
            }));
            else switch (e) {
                case !1:
                case "":
                    r = window.hasOwnProperty("homePageLightningSettings") && 1 == window.homePageLightningSettings.usedShouldBePreOwned ? di_search_settings.used_vehicles_url + t + "&type%5B%5D=New&type%5B%5D=Pre-Owned&type%5B%5D=Certified Pre-Owned" : di_search_settings.used_vehicles_url + t + "&type%5B%5D=New&type%5B%5D=Used&type%5B%5D=Certified Used";
                    break;
                case "New":
                    r = "" !== di_search_settings.new_vehicles_url ? di_search_settings.new_vehicles_url + t + "&type%5B%5D=New" : di_search_settings.used_vehicles_url + t + "&type%5B%5D=New";
                    break;
                case "Used":
                    r = di_search_settings.used_vehicles_url + t + "&type%5B%5D=Used";
                    break;
                case "Pre-Owned":
                    r = void 0 !== di_search_settings.include_cpo_when_used_selected && "enabled" === di_search_settings.include_cpo_when_used_selected ? di_search_settings.used_vehicles_url + t + "&type%5B%5D=Pre-Owned&type%5B%5D=Certified Pre-Owned" : di_search_settings.used_vehicles_url + t + "&type%5B%5D=Pre-Owned";
                    break;
                default:
                    r = di_search_settings.used_vehicles_url + t + "&type%5B%5D=" + encodeURIComponent(e)
            }
            "" === r && (r = ("" !== di_search_settings.used_vehicles_url ? di_search_settings.used_vehicles_url : di_search_settings.new_vehicles_url) + "#action=im_ajax_call&perform=get_results&page=1&type%5B%5D=New&type%5B%5D=Used&type%5B%5D=Certified Used")
        } catch (e) {
            return "undefined" != typeof console && console.log(e), !1
        }
        return r
    },
    update_filters = function(s, l) {
        var c = jQuery,
            t = JSON.parse(JSON.stringify(di_search_settings.filters)),
            d = [];
        try {
            var e = s.find(":input,select").not("button,[type=submit],[type=text], .vehicle-geoRadius, .overrideDynamicFilter");
            if (0 === e.length) throw "No filters were found in container!";
            if (c.each(e, function(e, t) {
                    var r = c(t).attr("name") ? c(t).attr("name").replace("[]", "").replace(/s$/i, "") : null,
                        i = c(t).val() ? c(t).val().toString() : null,
                        n = c(t).data("order") ? c(t).data("order") : null,
                        a = this.type;
                    if (null !== r) {
                        switch (r) {
                            case "mile":
                                r = "miles", n = null === n ? "range" : n;
                                break;
                            case "our_price":
                            case "price":
                                n = null === n ? "range" : n;
                                break;
                            case "type":
                                if (n = null === n ? "vehicle-condition" : n, "radio" === t.type) {
                                    if (i = s.find(':input[type=radio][name="type[]"]:checked').val()) break;
                                    if (("" === di_search_settings.new_on_used || "" === di_search_settings.used_on_new) && !c(t).val()) return void c(t).parent(".radio-button").remove();
                                    if (i || 0 !== s.find(':input[type=radio][name="type[]"]:checked').length || (c(t).attr("checked", "checked"), i = c(t).val()), !i) return
                                }
                                break;
                            case "year":
                                n = null === n ? "desc" : n
                        }
                        null === n && (n = "asc"), !0 === l && "type" !== r && "hidden" !== a && (i = null), d.push({
                            key: r,
                            selected_value: i,
                            values: [],
                            order: n,
                            element: c(t),
                            input_type: a
                        })
                    }
                }), 0 === d.length) throw "Could not detect filters in container!";
            window.search_filters_object && (t = search_filters_object(t, d)), c.each(d, function(r, e) {
                e.selected_value;
                var a = e.key;
                c.each(t, function(e, i) {
                    if (void 0 !== i[a]) {
                        var n = !1,
                            t = i[a];
                        t && (c.each(d, function(e, t) {
                            if (null !== t.selected_value && t.key !== a) {
                                var r = t.key;
                                if (void 0 === i[r]) return n = !0;
                                if ("type" === r && void 0 !== di_search_settings.include_cpo_when_used_selected && "enabled" === di_search_settings.include_cpo_when_used_selected && "Used" === t.selected_value && "Certified Used" === i[r] && (i[r] = "Used"), null !== t.selected_value)
                                    if ("hidden" === t.input_type && -1 < t.selected_value.search(",")) {
                                        if (-1 === t.selected_value.search(i[r])) return n = !0
                                    } else if (t.selected_value !== i[r]) return n = !0
                            }
                        }), !1 === n && -1 === c.inArray(t, d[r].values) && d[r].values.push(t))
                    }
                })
            }), s.find("select").not(".overrideDynamicFilter, .noFilter").find("option").each(function(e, t) {
                "" !== c(t).val() && c(t).remove()
            });
            var n = [];
            window.inventoryLightningFilterHomePageFilters && (d = window.inventoryLightningFilterHomePageFilters(d)), c.each(d, function(e, i) {
                if (0 !== i.values.length) {
                    switch (i.order) {
                        case "asc":
                            i.values.sort();
                            break;
                        case "desc":
                            i.values.sort().reverse();
                            break;
                        case "range":
                            i.values = searchSortArray(i.values)
                    }
                    c.each(i.values, function(e, t) {
                        if (n.push(t), "object" == typeof i.element && !0 === i.element.is("select")) {
                            var r = "type" === i.key ? t.replace("Used", "Pre-Owned") : t;
                            r = translateType(r), "range" === i.order && (r = DealerInspireInventory.format.number(r).replace("-", " - ")), i.element.append("<option value='" + t + "' " + (null !== i.selected_value && t === i.selected_value ? "selected='selected'" : "") + ">" + r + "</option>")
                        }
                    })
                }
            }), c("body").trigger("search_filters_rendered", [n])
        } catch (e) {
            "undefined" != typeof console && console.log(e.stack)
        }
    },
    hasOnlyNewVehicles = function(e) {
        var t, r = di_search_settings.filters;
        if (0 === Object.keys(e).length) return !1;
        if (e.hasOwnProperty("type")) return "New" === e.type.value;
        for (var i = 0; i < r.length; i++)
            if ("New" !== r[i].type) {
                for (var n in t = 1, e)
                    if (e[n].value !== r[i][n]) {
                        t = 0;
                        break
                    }
                if (1 === t) return !1
            }
        return !0
    };

function translateType(e) {
    var t = !!jQuery("body.lang-french").length,
        r = !!jQuery("body.lang-spanish").length;
    if (!t && !r) return e;
    switch (e) {
        case "New":
            e = t ? "Neuf" : "Nuevo";
            break;
        case "Used":
        case "Pre-Owned":
            e = t ? "d’occasion" : "Usado";
            break;
        case "Certified Used":
        case "Certified Pre-Owned":
            e = t ? "d’occasion Certifiés" : "Usado Certificado"
    }
    return e
}
jQuery("body.non-english").length && jQuery("body").on("search_filters_rendered", function(e, t) {
    void 0 === di_search_settings.translated_values && (di_search_settings.translated_values = {}, jQuery.ajax({
        url: "/",
        type: "POST",
        dataType: "json",
        data: {
            action: "im_ajax_call",
            perform: "translate_search_filters",
            filterVals: t,
            _language_code: "object" == typeof icl_vars && "en" !== icl_vars.current_language ? icl_vars.current_language : ""
        }
    }).done(function(e) {
        "object" != typeof e && (e = window.JSON.parse(e)), di_search_settings.translated_values = e, jQuery("body").trigger("search_filters_rendered", [t])
    })), "object" == typeof di_search_settings.translated_values && jQuery.each(di_search_settings.translated_values, function(e, t) {
        var r = jQuery('.filters-container option[value="' + e + '"]');
        r.length && (-1 < e.search(/pre-owned|new|used/i) && (t = translateType(e)), r.text(t))
    })
});
var searchSortArray = function(e) {
    var t, r = [];
    for (var i in e)
        for (var n in r[i] = e[i].match(/([^0-9]+)|([0-9]+)/g), r[i]) isNaN(t = parseInt(r[i][n])) || (r[i][n] = t);
    for (var i in r.sort(function(e, t) {
            for (var r in e) {
                if (t.length < r || e[r] < t[r]) return -1;
                if (e[r] > t[r]) return 1
            }
            return 0
        }), r) e[i] = r[i].join("");
    return e
};
jQuery(document).ready(function(u) {
    function o(e) {
        var t = u(".geo-zipcode-input-filter").map(function() {
            return this.value || null
        }).get();
        if (u(".filters-container select").hasClass("vehicle-geoRadius")) var r = u(".filters-container .vehicle-geoRadius").map(function() {
            return parseInt(this.value) || null
        }).get();
        if (u("input[type=number]").hasClass("geo-zipcode-input-filter")) {
            if (r.filter(function(e) {
                    if ("number" == typeof e) return e
                }), 0 !== r.length && "" !== r || (r = "all"), 0 === t.length && "all" !== r) return alert("Please enter a zipcode"), !1;
            var i = e.split("#"),
                n = i[0] + "?_geoZip=" + t + "&_geoRadius=" + r + "#" + i[1]
        }
        return n
    }
    0 < u(".filters-container").length && void 0 === di_search_settings.filters && jQuery.ajax({
        url: di_search_settings.ajax_url,
        type: "post",
        dataType: "json",
        data: {
            action: "im_ajax_call",
            perform: "homepage_search_filters"
        },
        success: function(e) {
            di_search_settings.filters = e, u(".filters-container").each(function(e, t) {
                var d = this;
                update_filters(u(d)), u(d).find(":input").change(function(e) {
                    var t = "type[]" === u(this).attr("name");
                    update_filters(u(d), t)
                }), u(d).find("input[type=button],button:not(.selectpicker),submit").click(function(e) {
                    var t = DealerInspireSearchAnything.get_instance(u(d).find("#search-anything-field,.alg-searc-class")),
                        r = "";
                    void 0 !== t.element && (r = t.element.val());
                    var i = t.placeholder_text ? t.placeholder_text : di_search_settings.placeholder_text,
                        a = [];
                    try {
                        var n = u(d).find(":input,select").not("button,[type=submit],[type=text]");
                        if (0 === n.length && !r) throw "Nothing to search for!";
                        u.each(n, function(e, t) {
                            var r = u(t).attr("name") ? u(t).attr("name") : null;
                            r && jQuery.each([
                                ["years", "year"],
                                ["makes", "make"],
                                ["models", "model"]
                            ], function(e, t) {
                                r = r.replace(t[0], t[1])
                            });
                            var i = u(t).attr("name") ? u(t).attr("name").replace("[]", "").replace(/s$/i, "") : null,
                                n = u(t).val() ? u(t).val().toString() : null;
                            "radio" === t.type && !1 === u(t).is(":checked") || i && n && (a[i] = {
                                value: n,
                                url_key: r
                            })
                        });
                        var s = "";
                        if (s = void 0 === a.type || r && "" != r && r != i ? hasOnlyNewVehicles(a) ? di_get_search_redirect_url("New") : di_get_search_redirect_url(!1) : di_get_search_redirect_url(a.type.value), r && r !== i) {
                            if (!1 !== t.redirect_url) s = t.redirect_url, t.element.val("Loading...").attr("disabled", "disabled");
                            else {
                                if (-1 !== r.search(/new /i) ? t.type = "New" : -1 !== r.search(/used |pre-owned |preowned /i) ? t.type = "Used" : -1 !== r.search(/cpo |certified /i) && (t.type = "Certified Used"), t.type ? s = di_get_search_redirect_url(t.type) : void 0 !== a.type && (s = di_get_search_redirect_url(a.type.value)), !1 === s) return !1;
                                !0 === DealerInspireBrowserDetection.isFireFox() && -1 < r.search("&") && (c.value = c.value.replace(/&/g, "_AND_")), s += "&search=" + r
                            }!1 !== (acf_redirect_url = di_get_homepage_acf_redirect_url(r)) && (s = acf_redirect_url)
                        } else {
                            if (!1 === s) throw "Redirect URL is not set!";
                            for (var l in a) {
                                var c = a[l];
                                "type" !== l && c.value && (!0 === DealerInspireBrowserDetection.isFireFox() && -1 < c.value.search("&") && (c.value = c.value.replace("&", "_AND_")), -1 < c.value.search(",") ? jQuery.each(c.value.split(","), function(e, t) {
                                    s += "&" + encodeURIComponent(c.url_key) + "=" + encodeURIComponent(t)
                                }) : s += "&" + encodeURIComponent(c.url_key) + "=" + encodeURIComponent(c.value))
                            }
                        }
                        return (u("input[type=number]").hasClass("geo-zipcode-input-filter") && (s = s && o(s)), window.search_filters_redirect_url && (s = search_filters_redirect_url(s, a, t)), !1 === s) ? !1 : (window.location.href = s, !1)
                    } catch (e) {
                        return "undefined" != typeof console && console.log(e), !1
                    }
                })
            })
        }
    })
});
//# sourceMappingURL=../sourcemaps/search-filters.min.js.map